#include <behaviors.dtsi>
#include <behaviors/swapper.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define SYM 1
#define NAV 2
#define NUM 3
#define MOU 4

&mmv {
    acceleration-exponent = <2>;
};
&msc {
    acceleration-exponent = <2>;
};

/ {
    

    keymap {
        compatible = "zmk,keymap";

        DEF { 
            bindings = <
                &kp Q        &kp W        &kp F        &kp P        &kp G         &kp J        &kp L        &kp U        &kp Y        &kp SEMI
                &kp A        &kp R        &kp S        &kp T        &kp D         &kp H        &kp N        &kp E        &kp I        &kp O
                &kp Z        &kp X        &kp C        &kp V        &kp B         &kp K        &kp M        &kp COMMA    &kp DOT      &kp SQT
                             &none        &kp LSHFT    &mo NAV      &kp TAB       &kp SPC      &mo SYM      &mo MOU      &none
            >;
        };

        SYM { 
            bindings = <
                &kp TAB         &kp LBKT        &kp LBRC        &kp LPRN        &kp TILD         &kp CARET       &kp RPRN         &kp RBRC        &kp RBKT         &kp GRAVE
                &kp MINUS       &kp ASTERISK    &kp EQUAL       &kp UNDER       &kp DLLR         &kp HASH        &sk RCTRL        &sk RSHFT       &sk RALT         &sk RGUI
                &kp PLUS        &kp PIPE        &kp AT          &kp SLASH       &kp PERCENT      &none           &kp BACKSLASH    &kp AMPERSAND   &kp EXCLAMATION  &kp QUESTION 
                                &trans          &trans          &trans          &trans           &trans          &trans           &trans          &trans
            >;
        };

        NAV { 
            bindings = <
                &kp ESCAPE       &sw LALT TAB      &sw LCTRL LS(TAB) &sw LCTRL TAB   &kp C_VOLUME_UP   &kp CAPSLOCK       &kp HOME         &kp UP        &kp END            &kp DELETE
                &sk LGUI         &sk LALT          &sk LSHFT         &sk LCTRL       &kp C_VOLUME_DOWN &none              &kp LEFT         &kp DOWN      &kp RIGHT          &kp BACKSPACE
                &kp LA(LG(LEFT)) &kp LA(LG(RIGHT)) &mkp MB4          &mkp MB5        &kp C_MUTE        &kp LA(LC(T))      &kp PAGE_DOWN    &kp PAGE_UP   &sw LCTRL SPC      &kp ENTER 
                                 &trans            &trans            &trans          &trans            &trans             &trans           &trans        &trans
            >;
        };


        NUM { 
            bindings = <
                &kp N1          &kp N2        &kp N3        &kp N4        &kp N5         &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
                &sk LGUI        &sk LALT      &sk LSHFT     &sk LCTRL     &kp F11        &kp F12       &sk RCTRL     &sk RSHFT     &sk RALT      &sk RGUI
                &kp F1          &kp F2        &kp F3        &kp F4        &kp F5         &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
                                &trans        &trans        &trans        &trans         &trans        &trans        &trans        &trans
            >;
        };

        MOU { 
            bindings = <
                &kp LC(W)       &sw LALT TAB  &sw LCTRL LS(TAB) &sw LCTRL TAB &none          &none         &msc SCRL_RIGHT &mmv MOVE_UP    &msc SCRL_LEFT  &none
                &none           &mkp MB2      &mkp MB3          &mkp MB1      &none          &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &none
                &none           &none         &mkp MB4          &mkp MB5      &none          &none         &msc SCRL_UP    &msc SCRL_DOWN  &none           &none
                                &trans        &trans            &trans        &trans         &trans        &trans          &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_boot_left {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&bootloader>;
        };
        combo_boot_right {
            timeout-ms = <50>;
            key-positions = <34 37>;
            bindings = <&bootloader>;
        };
    };

 };